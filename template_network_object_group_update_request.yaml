apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: template-network-object-group-update-request
  title: template-network-object-group-update-request
  description: template network object group update request.yaml
  tags:
    - recommended
    - python
spec:
  owner: v-jwysokinski@expediagroup.com
  type: lambda
  parameters:
    - title: Provide basic information about project
      required:
        - project_name
        - owner
      properties:
        project_name:
          title: Name
          type: string
          description: Unique name of the project
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: In few words help others understand what this application is for.
        owner:
          title: Owner
          type: string
          description: Backstage owner (can be group)
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Vault parameters
      required:
        - vault_env
        - vault_role
        - vault_namespace
        - vault_app_path
        - vault_mount_point
      properties:
        vault_env: #TODO shouldn't it be enum?
          title: Vault environment
          type: string
          default: "prod"
        vault_role:
          title: Vault Role
          type: string
          default: "aws.islands.infrastructure.network.cnrq_deployment.deploy-hybrid-nog-manual-EgNetwork-CodeBuild.readonly"
        vault_namespace:
          title: Vault namespace
          type: string
          default: "prod/islands/infrastructure"
        vault_app_path:
          title: Vault app path
          type: string
          default: "network/kv-v2/cnrq_deployment/credentials"
        vault_mount_point:
          title: Vault mount point
          type: string
          default: "network/kv-v2"

    - title: Tags
      required:
        - data_classification_tags
        - application_tag
        - environment_tag
      properties:
        environment_tag:
          title: Environment tag
          type: string
          default: "PROD"
          pattern: '^[a-zA-Z0-9]*$'
        application_tag:
          title: Application tag
          type: string
          default: "cloud-connectivity"
          pattern: '^[a-zA-Z0-9]*$'
        data_classification_tags: #TODO check if it works correctly
          title: Data classification tags
          type: array
          minItems: 0
          ui:options:
            addable: true
            orderable: true
            removable: true
          items:
            type: object
            properties:
              someInput:
                title: Simple text input
                type: string
                default: confidential
                pattern: '^[a-zA-Z0-9]*$'

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetch and filling template
      action: fetch:cookiecutter
      input:
        url: templates
        copyWithoutRender:
          - template_1
          - template_2
          - template_mvp
        values:
          project_name: ${{ parameters.project_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          project_slug: ${{ parameters.project_name | lower | replace(" ", "_") | replace("-", "_") }}
          version: 0.1.0
          vault_env: ${{ parameters.vault_env }}
          vault_addr: "https://vault-enterprise.us-west-2.secrets.runtime.prod-cts.exp-aws.net"
          vault_role: ${{ parameters.vault_role }}
          vault_namespace: ${{ parameters.vault_namespace }}
          vault_app_path: ${{ parameters.vault_app_path }}
          vault_mount_point: ${{ parameters.vault_mount_point }}
          environment_tag: ${{ parameters.environment_tag }}
          application_tag: ${{ parameters.application_tag }}
          data_classification_tags: ${{ parameters.data_classification_tags }}
          team_tag: "egnetwork"
          brand_tag: "expediaservices"
          cost_center_tag: "95310"
          snn_user_owners: "9504f11e2be339002c730fed59da15cc,5e0fd9280f685e40e4b0847022050e5b"
          snn_group_owners: "2c5a6db41ba77090e63d85d7cc4bcbce"
          commit_message_nog: "NOG details Updated"
          commit_message_tenant: "Tenant details Updated"
          snow_instance_write: "expedia.service-now.com"
          filename_nog: "old_nog_details"
          filename_tenant: "automation_hybrid_nogs"
          file_extension: ".json"
          panorama_version: "v10.1"
          nog_git_user: "s-connectdc"
          nog_git_repo_url: "github.expedia.biz/eg-network/netapp-hybrid-nog-manual.git"
          nog_git_repo_name: "netapp-hybrid-nog-manual"
          panoramas_hil_primary: "10.97.0.48"
          panoramas_hil_secondary: "10.97.0.83"
          panoramas_ash_primary: "10.97.16.41"
          panoramas_ash_secondary: "10.97.16.101"
          donnie_url: "https://donnie.prod.hiflexpoc.expedia.com"


    - id: publish
      name: Publish
      action: publish:github
      input:
        sourcePath: template_network_object_group_update_request
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.project_name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
