apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python-template-1
  title: python-template-1
  description: Dummy template 1
  tags:
    - recommended
    - python
spec:
  owner: v-jwysokinski@expediagroup.com
  type: lambda
  parameters:
    - title: Provide information about project
      required:
        - project_name
        - owner
      properties:
        project_name:
          title: Name
          type: string
          description: Unique name of the project
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: desc
        owner:
          title: Owner
          type: string
          description: Owner of the component (Can be backstage group/team)
          default: jwyso1
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        cloud_provider:
          title: Cloud provider
          type: string
          description: Cloud provider
          default: aws
          enum:
            - aws
            - gcp
            - azure
          enumNames:
            - 'Amazon Web Services (aws)'
            - 'Google Cloud Platform (gcp)'
            - 'Microsoft Azure (azure)'
        command_line_interface:
          title: Command line interface
          type: string
          description: Command line interface tool
          default: argparse
          enum:
            - argparse
            - None
        jira_project_key:
          title: Jira project
          type: string
          default: NETAUTOMAT
          description: Jira project key is used to distinguish one projects tasks with another one. The tasks in jira are conducted with follwing pattern <jira-project-key>-<number> for example NETAUTOMAT-211. Leave empty if you do not want to use JIRA PLUGIN
        dryRun:
          title: Only perform a dry run, don't publish anything
          type: boolean
          default: true
          
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: fetch-base
      name: Fetch and filling template
      action: fetch:cookiecutter
      input:
        url: templates
        copyWithoutRender:
          - template_2
        values:
          project_name: ${{ parameters.project_name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          cloud_provider: ${{parameters.cloud_provider }}
          cloud_provider_full_name: ${{ parameters.cloud_provider.enumNames }}
          project_specific_value: 1
          command_line_interface: argparse
          pypi_username: TODO SS
          project_slug: ${{ parameters.project_name | lower | replace(" ", "_") | replace("-", "_") }}
          version: 0.1.0
          jira_project_key: ${{parameters.jira_project_key}}

    - name: Results
      if: ${{ parameters.dryRun }}
      action: debug:log
      input:
        listWorkspace: true

    - id: poetry_install
      name: poetry install
      action: shell:execute
      input:
        command: "python"
        args:
          - "./run_poetry_update.py"

    - id: publish
      name: Publish
      if: ${{ parameters.dryRun !== true }}
      action: publish:github
      input:
        sourcePath: template_1
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.project_name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      if: ${{ parameters.dryRun !== true }}
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
